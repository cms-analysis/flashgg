import FWCore.ParameterSet.Config as cms

# configuration to model pileup for initial physics phase
from SimGeneral.MixingModule.mixObjects_cfi import theMixObjects
from SimGeneral.MixingModule.mixPoolSource_cfi import *
from SimGeneral.MixingModule.digitizers_cfi import *

mix = cms.EDProducer("MixingModule",
    digitizers = cms.PSet(theDigitizers),
    LabelPlayback = cms.string(''),
    maxBunch = cms.int32(3),
    minBunch = cms.int32(-12), ## in terms of 25 nsec

    bunchspace = cms.int32(25), ##ns
    mixProdStep1 = cms.bool(False),
    mixProdStep2 = cms.bool(False),

    playback = cms.untracked.bool(False),
    useCurrentProcessOnly = cms.bool(False),

    input = cms.SecSource("EmbeddedRootSource",
        type = cms.string('probFunction'),
        nbPileupEvents = cms.PSet(
          probFunctionVariable = cms.vint32(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99),
            probValue = cms.vdouble(
                0.023,
                0.000725,
                0.00119,
                0.00144,
                0.00136,
                0.00131,
                0.00121,
                0.00117,
                0.00197,
                0.00159,
                0.0022,
                0.00326,
                0.00466,
                0.00629,
                0.00863,
                0.0111,
                0.0139,
                0.0167,
                0.0193,
                0.0218,
                0.0234,
                0.0246,
                0.0254,
                0.026,
                0.0269,
                0.0277,
                0.0285,
                0.0288,
                0.0286,
                0.0288,
                0.0285,
                0.0288,
                0.0288,
                0.0285,
                0.0283,
                0.0274,
                0.0263,
                0.025,
                0.0243,
                0.0235,
                0.0217,
                0.0198,
                0.0179,
                0.0162,
                0.0147,
                0.0135,
                0.0123,
                0.0121,
                0.0118,
                0.0116,
                0.0118,
                0.0118,
                0.0118,
                0.0119,
                0.0117,
                0.0119,
                0.0118,
                0.0115,
                0.011,
                0.0103,
                0.00914,
                0.00782,
                0.00648,
                0.00538,
                0.00434,
                0.00353,
                0.00304,
                0.00225,
                0.00167,
                0.00112,
                0.0009,
                0.000737,
                0.000557,
                0.00029,
                0.000366,
                0.000253,
                0.000283,
                0.00015,
                0.000195,
                0.000358,
                0.000443,
                0.000447,
                0.000236,
                0.000304,
                0.000156,
                0.000189,
                0.000162,
                0.000312,
                0.000224,
                0.000205,
                1.64e-05,
                9.11e-06,
                4.11e-05,
                4.98e-06,
                0.000104,
                0.00018,
                5.2e-05,
                2.11e-05,
                3.1e-05,
                3.59e-05),
          histoFileName = cms.untracked.string('histProbFunction.root'),
        ),
                          sequential = cms.untracked.bool(False),
                          manage_OOT = cms.untracked.bool(True),  ## manage out-of-time pileup
                          ## setting this to True means that the out-of-time pileup
        ## will have a different distribution than in-time, given
        ## by what is described on the next line:
        OOT_type = cms.untracked.string('Poisson'),  ## generate OOT with a Poisson matching the number chosen for in-time
        #OOT_type = cms.untracked.string('fixed'),  ## generate OOT with a fixed distribution
        #intFixed_OOT = cms.untracked.int32(2),
        fileNames = FileNames
    ),
    mixObjects = cms.PSet(theMixObjects)
)
